{"version":3,"sources":["images/header1.jpg","images/header3.jpg","images/header2.jpg","layouts/Header.js","layouts/Navigation.js","layouts/Footer.js","components/Article.js","pages/HomePage.js","components/Product.js","pages/ProductPage.js","pages/ProductListPage.js","pages/ContactPage.js","pages/AdminPage.js","pages/LoginPage.js","pages/ErrorPage.js","layouts/Page.js","layouts/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","path","exact","render","src","img1","alt","img2","img3","list","name","Navigation","menu","map","item","key","to","className","Footer","props","console","log","match","params","page","url","idProduct","Article","style","marginTop","marginBottom","textTransform","title","display","fontSize","author","text","articles","id","HomePage","articleList","article","Product","ProductPage","products","ProductListPage","product","ContactPage","state","value","handleSubmit","e","preventDefault","setState","isEmpty","handleChange","target","length","onSubmit","this","onChange","placeholder","when","message","React","Component","AdminPage","LoginPage","htmlFor","type","ErrorPage","Page","component","App","basename","process","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa0b327e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header1.70e6670e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/header3.d9d36b65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/header2.33eca35f.jpg\";","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom';\nimport img1 from '../images/header1.jpg';\nimport img2 from '../images/header2.jpg';\nimport img3 from '../images/header3.jpg';\nimport '../styles/Header.css'\n\n\nconst Header = () => {\n\n  // tworzymy tablice, jesli chcemy losowy header\n  // const images = [img1, img2, img3];\n  // const index = Math.floor(Math.random() * images.length);\n\n  // const img = images[index];\n\n  return (\n\n    <>\n      {/* DLA KAZDEJ PODSTRONY MAMY KONKRETNY, PRZYPISANY OBRAZEK W HEADER */}\n      <Switch>\n\n        {/* mozemy tutaj przekazac component={headerImage} ale tutaj dajemy cos alternatywnego */}\n        <Route path=\"/\" exact render={() => (\n          <img src={img1} alt=\"miasto\" />\n        )} />\n\n        <Route path=\"/products\" render={() => (\n          <img src={img2} alt=\"miasto\" />\n        )} />\n\n        <Route path=\"/contact\" render={() => (\n          <img src={img3} alt=\"miasto\" />\n        )} />\n\n        <Route path=\"/admin\" render={() => (\n          <img src={img3} alt=\"miasto\" />\n        )} />\n\n        {/* w sytuacji, jak ktos wpisze adres, ktorego nie ma */}\n        <Route render={() => (\n          <img src={img1} alt=\"miasto\" />\n        )} />\n      </Switch>\n\n\n      {/* LOSUJEMY HEADER DLA WYSWIETLANEJ PODSTRONY */}\n      {/* <img src={img} alt=\"header\" /> */}\n\n    </>\n  )\n};\n\nexport default Header;\n","import React from \"react\";\nimport '../styles/Navigation.css'\nimport { NavLink } from \"react-router-dom\";\n\nconst list = [\n  { name: \"start\", path: \"/\", exact: true },\n  { name: \"produkty\", path: \"/products\" },\n  { name: \"kontakt\", path: \"/contact\" },\n  { name: \"panel admina\", path: \"/admin\" },\n]\n\nconst Navigation = () => {\n\n  const menu = list.map(item => (\n    <li key={item.name}>\n      {/* jak NavLink jest klikniety to automatycznie do a przypisywana jest klasa active, ktora mozemy oscylowac w css */}\n      <NavLink to={item.path} exact={item.exact ? item.exact : false}>{item.name}</NavLink>\n    </li>\n  ));\n\n  return (\n    <nav className=\"main\">\n      <ul>\n        {menu}\n      </ul>\n    </nav>\n  )\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport '../styles/Footer.css';\n\nconst Footer = () => {\n  return (\n\n    <div>\n\n      <h2>Stopka</h2>\n      <Route path=\"/\" exact render={(props) => (\n        <p>Jesteś na <span>stronie głównej</span></p>\n      )\n      } />\n\n      <Route path=\"/:page\" exact render={(props) => {\n        console.log(props);\n        return (\n          <>\n            {/* page bo taka nazwe dalismy w path tj. path=\"/:page\" */}\n            <p>Jesteś na <span>{props.match.params.page}</span></p>\n            <p>Jesteś na <span>{props.match.url}</span></p>\n            <p>Jesteś na <span>{props.match.path}</span></p>\n          </>\n        )\n      }} />\n\n      <Route path=\"/:page/:idProduct\" exact render={(props) => {\n        console.log(props);\n        return (\n          <>\n            <p>Jesteś na <span>{props.match.params.page}</span></p>\n            <p>Jesteś na <span>{props.match.params.idProduct}</span></p>\n            <p>Jesteś na <span>{props.match.url}</span></p>\n            <p>Jesteś na <span>{props.match.path}</span></p>\n          </>\n        )\n      }} />\n\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nconst Article = (props) => {\n\n    // powinnismy stylowac w osobnym dokumencie css ale w ramach cwiczen zrobimy to tutaj\n    const styles = {\n        marginTop: \"40px\",\n\n    }\n    return (\n        <article key={props.key} style={styles}>\n            <h3 style={{\n                marginBottom: \"3px\",\n                textTransform: \"uppercase\"\n            }}>{props.title}</h3>\n            <span style={{\n                display: \"block\",\n                marginBottom: \"10px\",\n                fontSize: \"12px\",\n            }}>{props.author}</span>\n            <p style={{ fontSize: \"15px\" }}>{props.text}</p>\n        </article>\n    );\n}\n\nexport default Article;","import React from 'react';\nimport Article from '../components/Article'\n\nconst articles = [\n    {\n        id: 1,\n        title: \"Czym jest teoria stron?\",\n        author: \"Jan Nowak\",\n        text: \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magni harum qui perferendis molestiae necessitatibus! Inventore voluptatibus aliquid, quam ducimus corrupti temporibus modi quae assumenda eos iure veritatis. Quidem, omnis consequatur?\"\n    },\n\n    {\n        id: 2,\n        title: \"Czym jest paradoks Fermiego?\",\n        author: \"Pola Noakowska\",\n        text: \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magni harum qui perferendis molestiae necessitatibus! Inventore voluptatibus aliquid, quam ducimus corrupti temporibus modi quae assumenda eos iure veritatis. Quidem, omnis consequatur?\"\n    },\n\n    {\n        id: 3,\n        title: \"Ciemna materia i ciemna energia?\",\n        author: \"Paweł Jankowski\",\n        text: \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magni harum qui perferendis molestiae necessitatibus! Inventore voluptatibus aliquid, quam ducimus corrupti temporibus modi quae assumenda eos iure veritatis. Quidem, omnis consequatur?\"\n    },\n]\n\nconst HomePage = () => {\n\n    const articleList = articles.map(article => (\n        <Article key={article.id} {...article} />\n    ));\n    return (\n\n        <div className=\"home\">\n            {articleList}\n        </div>\n    );\n}\n\nexport default HomePage;","import React from 'react';\n\nconst Product = (props) => {\n    return (\n        <article className=\"product\">\n            <h1>{props.id}</h1>\n        </article>\n    );\n}\n\nexport default Product;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Product from '../components/Product';\n\n// program router sam tworzy nam obiekt, w ktorym mamy match, params etc.\nconst ProductPage = ({ match }) => {\n    return (\n        <>\n            <div>Strona produktu</div>\n            <Product id={match.params.id} />\n            <Link to=\"/products\">Powrót do listy produktów</Link>\n        </>\n    );\n}\n\nexport default ProductPage;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/ProductListPage.css';\n\n\n// symulacja bazy produktów\nconst products = [\"car\", \"bike\", \"motorcycle\"];\n\nconst ProductListPage = () => {\n\n    const list = products.map(product => (\n        <li key={product}>\n            <Link to={`/product/${product}`}>{product} </Link >\n        </li >\n    ))\n\n\n    return (\n        <div className=\"products\">\n\n            <h2>Lista produktów</h2>\n            <div>\n                <ul>\n                    {list}\n                </ul>\n            </div>\n\n        </div>\n    );\n}\n\nexport default ProductListPage;","import React from 'react';\nimport '../styles/ContactPage.css';\nimport { Prompt } from 'react-router-dom';\n\nclass ContactPage extends React.Component {\n\n    state = {\n        value: \"\",\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            value: \"\",\n            isEmpty: true,\n        })\n    }\n\n    handleChange = (e) => {\n        if (e.target.value.length > 0) {\n            this.setState({\n                value: e.target.value,\n                isEmpty: false,\n            })\n        } else {\n            this.setState({\n                value: e.target.value,\n                isEmpty: true,\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"contact\">\n                <form onSubmit={this.handleSubmit}>\n                    <h3>Napisz do nas!</h3>\n                    <textarea value={this.state.value} onChange={this.handleChange} placeholder=\"Wpisz wiadomość...\"></textarea>\n                    <button>Wyślij</button>\n                </form>\n                {/* za pomoca Prompt blokujemy, ze jesli nastepuje zmiana sciezki to wyswietla sie alert czy aby na pewno tego chcemy */}\n                <Prompt\n                    // to samo co when={this.state.value !== \"\"}\n                    // when={this.state.value}\n                    when={this.state.isEmpty === false}\n                    message=\"Masz niewypełniony formularz. Czy na pewno chcesz opuścić tę stronę?\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default ContactPage;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n// to tak prowizorycznie zrobione -> jak false to nie mamy dostepu do panelu admina i przekierowuje nas do tego, aby się zalogowac, a jak mamy dostep, czyli ustawiamy na true to wita nas w panelu admina\nconst permission = false;\n\nconst AdminPage = () => {\n    return (\n        <Route render={() => (\n            permission ? (<h3>Panel admina - dzień dobry</h3>) : (\n                <Redirect to=\"/login\" />\n            )\n        )} />\n\n    );\n}\n\nexport default AdminPage;","import React from 'react';\n\nconst LoginPage = () => {\n    return (\n        <div>\n            <label htmlFor=\"\">Podaj login<input type=\"text\" /></label>\n            <label htmlFor=\"\">Podaj hasło<input type=\"password\" /></label>\n            <button>Zaloguj</button>\n        </div>\n    );\n}\n\nexport default LoginPage;","import React from 'react';\n\n// komponent, ktory wylapuje blad, jesli wpisano adres, ktory nie jest do niczego podporzadkowany\n\nconst ErrorPage = () => {\n    return (\n        <div>Strona nie istnieje</div>\n    );\n}\n\nexport default ErrorPage;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from '../pages/HomePage';\nimport ProductPage from '../pages/ProductPage';\nimport ProductListPage from '../pages/ProductListPage';\nimport ContactPage from '../pages/ContactPage';\nimport AdminPage from '../pages/AdminPage';\nimport LoginPage from '../pages/LoginPage';\nimport ErrorPage from '../pages/ErrorPage';\n\n\nconst Page = () => {\n  return (\n    <>\n\n      {/* jak dajemy Switch wykona się tylko jeden komponent Route, a nie wszystkie, które go spełniają */}\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/products\" component={ProductListPage} />\n        <Route path=\"/product/:id\" component={ProductPage} />\n        <Route path=\"/contact\" component={ContactPage} />\n        <Route path=\"/admin\" component={AdminPage} />\n        <Route path=\"/login\" component={LoginPage} />\n        <Route component={ErrorPage} />\n      </Switch>\n\n    </>\n  );\n}\n\nexport default Page;\n","import React, { Component } from \"react\";\nimport \"../styles/App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Navigation from \"./Navigation\";\nimport Footer from \"./Footer\";\nimport Page from \"./Page\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"app\">\n          <header>\n            {<Header />}\n          </header>\n\n          <main>\n            <aside>{<Navigation />}</aside>\n            <section className=\"page\">{<Page />}</section>\n          </main>\n\n          <footer>{<Footer />}</footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./layouts/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}